type mdev, domain, mlstrustedsubject;
type mdev_exec, exec_type, file_type;
# permissive mdev;
domain_auto_trans(kernel, mdev_exec, mdev)
domain_auto_trans(init,mdev_exec,mdev)
# domain_auto_trans(mdev,kmodloader_exec,kmodloader)
# domain_auto_trans(mdev,busybox_exec,busybox)
# # domain_auto_trans(mdev,shell_exec,shell)
# domain_auto_trans(kernel,busybox_exec,busybox)

# allow mdev self:capability { sys_module sys_admin };

# allow mdev dev_type:dir { rw_dir_perms setattr};
# allow mdev dev_type:chr_file { rw_file_perms setattr};
# allow mdev dev_type:blk_file { rw_file_perms setattr};
# allow mdev dev_type:lnk_file create_file_perms;

# allow mdev init:fifo_file { read write };

# allow mdev { system_file shell}:file { execute execute_no_trans open execmod };

# allow mdev tmpfs:dir create_dir_perms;
# allow mdev tmpfs:file create_file_perms;
# allow mdev tmpfs:lnk_file create;

# allow mdev sysfs:dir mounton;

# allow mdev {mount_exec temp_exec shell_exec}:file {read getattr execute execute_no_trans open execmod};
# allow mdev {mount_exec temp_exec shell_exec}:lnk_file { getattr open read execute };

# allow mdev { storage_file etc_selinux }:dir { search open read getattr };
# allow mdev { storage_file etc_selinux }:{ file lnk_file } { open read getattr };
# allow mdev storage_file:dir mounton;
# allow mdev etc_passwd:file r_file_perms;

# allow mdev labeledfs:filesystem mount;

# allow mdev rootfs:chr_file rw_file_perms;
