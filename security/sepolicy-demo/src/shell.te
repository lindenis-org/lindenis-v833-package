# Domain for shell processes spawned by ADB or console service.
type shell, domain, mlstrustedsubject;
type shell_exec, exec_type, file_type;

# permissive shell;
# Create and use network sockets.
net_domain(shell)

# Run app_process.
# XXX Transition into its own domain?
app_domain(shell)

domain_auto_trans(shell,audio_exec,audio);
domain_auto_trans(shell,kmodloader_exec,kmodloader);

allow shell { askfirst netifd audio }:fd use;
allow shell { netifd audio }:fifo_file { write ioctl };

# set fs.
# allow shell rootfs:dir { getattr setattr add_name search open read write };
# allow shell rootfs_exec:dir { getattr setattr add_name search open read write };

# allow shell rootfs:file { read write execute create getattr append };
# allow shell rootfs_exec:file { read write execute getattr};

# set tmpfs
allow shell tmpfs:file { create_file_perms x_file_perms };
allow shell tmpfs:chr_file rx_file_perms;
allow shell tmpfs:dir { create rw_dir_perms mounton };

# read files in /data
# allow shell system_data_file:dir { search getattr write remove_name };
# allow shell system_data_file:file rx_file_perms;

# set dev access
# allow shell dev_type:dir { open read write search getattr setattr add_name };
allow shell devpts:chr_file rw_file_perms;

allow shell device:dir { open read write search getattr setattr add_name create };
allow shell device:lnk_file { open read write getattr setattr create };
allow shell device:blk_file { r_file_perms setattr };

allow shell { console_device serial_device }:chr_file rw_file_perms;
allow shell { dev_type -kmem_device }:chr_file getattr;
# allow shell { device serial_device console_device tty_device tee_device vcs_device }:chr_file { rw_file_perms setattr };
allow shell { kmsg_device input_device hdmi_device framebuf_device disp_device usb_device audio_device }:chr_file rw_file_perms;

allow shell input_device:dir r_dir_perms;
# allow shell watchdog_device:chr_file { read write };
allow shell { mmc_device nand_device dm_device }:blk_file r_file_perms;
allow shell { mmc_device nand_device }:blk_file w_file_perms;
allow shell dm_device:dir r_dir_perms;
allow shell dm_device:chr_file r_file_perms;

# read storages files
allow shell storage_file:dir rw_dir_perms;
allow shell storage_file:file rwx_file_perms;

# set file
r_dir_file(shell, system_file)
#r_dir_file(shell, file_type)
allow shell { preinit_exec etc_passwd }:file r_file_perms;
allow shell preinit_exec:dir r_dir_perms;

# file_contexts
allow shell etc_selinux:dir { search open read getattr };
allow shell etc_selinux:{ file lnk_file } { open read getattr };

allow shell system_file:file x_file_perms;

allow shell shell_exec:file { open read write execute execute_no_trans getattr };
allow shell shell_exec:lnk_file { open read write execute getattr };

allow shell {mount_exec temp_exec}:file {read getattr execute execute_no_trans open execmod};
allow shell {mount_exec temp_exec}:lnk_file { getattr open read execute };

# allow shell zygote_exec:file rx_file_perms;

# just debug
# allow shell dev_type:lnk_file { open read write execute getattr };
allow shell busybox_exec:file { open read write execute getattr};

# allow shell to run dmesg
allow shell kernel:system syslog_read;
# allow shell kernel:system { syslog_read syslog_mod syslog_console module_request module_load };
allow shell kernel:process setsched;

# allow shell access to services
#allow shell servicemanager:service_manager list;
# don't allow shell to access GateKeeper service
# allow shell { service_manager_type -gatekeeper_service -netd_service }:service_manager find;

# allow shell to look through /proc/ for ps, top, netstat
r_dir_file(shell, proc)
#r_dir_file(shell, proc_net)
#allow shell proc_meminfo:file r_file_perms;
r_dir_file(shell, cgroup)
allow shell domain:dir { search open read getattr };
allow shell domain:{ file lnk_file } { open read getattr };

# statvfs() of /proc and other labeled filesystems
# (yaffs2, jffs2, ext2, ext3, ext4, xfs, btrfs, f2fs, squashfs)
allow shell { proc labeledfs }:filesystem getattr;

allow shell { sdcard_external device devpts tmpfs }:filesystem { remount unmount mount };
allow shell { proc selinuxfs labeledfs sysfs }:filesystem { remount unmount mount };

# stat() of /dev
allow shell device:dir getattr;

# allow shell to read /proc/pid/attr/current for ps -Z
allow shell domain:process getattr;

# Allow pulling the SELinux policy for CTS purposes
allow shell selinuxfs:dir r_dir_perms;
allow shell selinuxfs:file r_file_perms;

# enable shell domain to read/write files/dirs for bootchart data
# User will creates the start and stop file via adb shell
# and read other files created by init process under /data/bootchart
#allow shell bootchart_data_file:dir rw_dir_perms;
#allow shell bootchart_data_file:file create_file_perms;

# Make sure strace works for the non-privileged shell user
allow shell self:process ptrace;

allow shell init:process { signal };
allow shell init:fifo_file { write ioctl };

# allow shell to get battery info
#allow shell sysfs_batteryinfo:file r_file_perms;
allow shell sysfs:dir r_dir_perms;

# Allow access to ion memory allocation device.
allow shell ion_device:chr_file rw_file_perms;

# capability
allow shell self:capability sys_admin;
allow shell self:capability2 syslog;

allow shell unlabeled:dir { search getattr };


###
### Neverallow rules
###

# Do not allow shell to hard link to any files.
# In particular, if shell hard links to app data
# files, installd will not be able to guarantee the deletion
# of the linked to file. Hard links also contribute to security
# bugs, so we want to ensure the shell user never has this
# capability.
neverallow shell file_type:file link;

