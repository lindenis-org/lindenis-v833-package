
# T7
# Loopback
# audiocodec
# snddaudio0
# snddmic
# sndspdif

ctl.!default {
	type hw
	card audiocodec
}

pcm.!default {
	type asym
	playback.pcm "PlaybackDmix"
	capture.pcm "CaptureDsnoop"
}

pcm.PlaybackDmix {
	type plug
	slave.pcm {
		type dmix
		ipc_key 1111
		ipc_perm 0666
		slave {
			pcm "hw:audiocodec,0"
			rate 48000
		}
	}
}

pcm.CaptureDsnoop {
	type plug
	slave.pcm {
		type dsnoop
		ipc_key 1111
		ipc_perm 0666
		slave {
			pcm "hw:audiocodec,0"
			rate 48000
			channels 2
		}
	}
}

pcm.PlaybackLineout {
	type hooks
	slave.pcm "PlaybackDmix"
	hooks.0 {
		type ctl_elems
		hook_args [
			{
				name "Left Output Mixer DACL Switch"
				optional true
				value 1
			}
			{
				name "Right Output Mixer DACR Switch"
				optional true
				value 1
			}
			{
				name "Left LINEOUT Mux"
				optional true
				value "Left OMixer"
			}
			{
				name "Right LINEOUT Mux"
				optional true
				value "Right OMixer"
			}
			{
				name "LINEOUT volume"
				preserve 1
				optional true
				value 30
			}
			{
				name "digital volume"
				preserve 1
				optional true
				value 63
			}
		]
	}
}

pcm.PlaybackSpeaker {
	type hooks
	slave.pcm "PlaybackDmix"
	hooks.0 {
		type ctl_elems
		hook_args [
			{
				name "Left Output Mixer DACL Switch"
				optional true
				value 1
			}
			{
				name "Right Output Mixer DACR Switch"
				optional true
				value 1
			}
			{
				name "Phone Out Mixer LOMIX Switch"
				optional true
				value 1
			}
			{
				name "Phone Out Mixer ROMIX Switch"
				optional true
				value  1
			}
			{
				name "Phoneout Speaker Switch"
				#preserve true
				#lock true
				optional true
				value 1
			}
			{
				name "phoneout volume"
				optional true
				value 4
			}
			{
				name "digital volume"
				optional true
				value 63
			}
		]
	}
}

pcm.CaptureMic12 {
	type hooks
	slave.pcm "CaptureDsnoop"
	hooks.0 {
		type ctl_elems
		hook_args [
			{
				name "Left Input Mixer MIC1 Boost Switch"
				preserve true
				optional true
				value 1
			}
			{
				name "Right Input Mixer MIC2 Boost Switch"
				preserve true
				optional true
				value 1
			}
			{
				name "ADC gain volume"
				preserve true
				optional true
				value 4
			}
			{
				name "MIC1 boost volume"
				preserve true
				optional true
				value 4
			}
			{
				name "MIC2 boost volume"
				preserve true
				optional true
				value 4
			}
		]
	}
}

pcm.CaptureMic {
	type hooks
	slave.pcm "hw:audiocodec,0"
	hooks.0 {
		type ctl_elems
		hook_args [
			{
				name "Left Input Mixer MIC1 Boost Switch"
				optional true
				value 1
			}
			{
				name "Right Input Mixer MIC2 Boost Switch"
				optional true
				value 1
			}
			{
				name "Xadc Input Mixer MIC3 Boost Switch"
				optional true
				value 1
			}
			{
				name "ADC gain volume"
				optional true
				value 4
			}
			{
				name "MIC1 boost volume"
				optional true
				value 4
			}
			{
				name "MIC2 boost volume"
				optional true
				value 4
			}
			{
				name "MIC3 boost volume"
				optional true
				value 4
			}
		]
	}
}

pcm.RecordPlay {
	type asym
	playback.pcm {
		type hooks
		slave.pcm "PlaybackLineout"
		hooks.0 {
			type ctl_elems
			hook_args [
				{
					name "ADC gain volume"
					preserve true
					optional true
					value 6
				}
				{
					name "Left Output Mixer MIC1 Boost Switch"
					preserve true
					optional true
					value 1
				}
				{
					name "Right Output Mixer MIC2 Boost Switch"
					preserve true
					optional true
					value 1
				}
				{
					name "MIC1 gain volume"
					preserve true
					optional true
					value 4
				}
				{
					name "MIC2 gain volume"
					preserve true
					optional true
					value 4
				}
			]
		}
	}
	capture.pcm "CaptureMic"
}

pcm.CaptureDmic {
	type hw
	card "snddmic"
}

pcm.PlaybackSpdif {
	type hw
	card "sndspdif"
}

pcm.CaptureSpdif {
	type hw
	card "sndspdif"
}

#Loopback debug

pcm.Loopback {
	type asym
	playback.pcm "PlaybackLoopback"
	capture.pcm "CaptureLoopback"
}

pcm.PlaybackLoopback {
	type plug
	slave.pcm {
		type multi
		slaves {
			a { pcm "dmix:audiocodec,0" channels 2 }
			b { pcm "dmix:Loopback,0,0" channels 2 }
		}
		bindings {
			0 { slave a channel 0 }
			1 { slave a channel 1 }
			2 { slave b channel 0 }
			3 { slave b channel 1 }
		}
	}
	ttable.0.0 1
	ttable.1.1 1
	ttable.0.2 1
	ttable.1.3 1
}

pcm.CaptureLoopback {
	type plug
	slave.pcm "hw:Loopback,1,0"
}

pcm.PlaybackDaudioLoopback0 {
	type hooks
	slave.pcm "hw:snddaudio0"
	hooks.0 {
		type ctl_elems
		hook_args [
			{
				name "sunxi daudio loopback debug"
				preserve true
				lock true
				optional true
				value 1
			}
		]
	}
}

pcm.LoopbackDaudio0 {
	type asym
	playback.pcm "PlaybackDaudioLoopback0"
	capture.pcm "hw:snddaudio0"
}

pcm.PlaybackSpdifLoopback {
	type hooks
	slave.pcm "hw:sndspdif"
	hooks.0 {
		type ctl_elems
		hook_args [
			{
				name "sunxi spdif loopback debug"
				preserve true
				lock true
				optional true
				value 1
			}
		]
	}
}

pcm.LoopbackSpdif {
	type asym
	playback.pcm "PlaybackSpdifLoopback"
	capture.pcm "CaptureSpdif"
}
